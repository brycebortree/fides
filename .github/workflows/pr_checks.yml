name: PR Checks

on:
  pull_request:
    branches:
      - main
    paths: # Only run tests when certain paths change
      - fidesctl/**
      - .github/workflows/test.yaml

env:
  CONTAINER: fidesctl-${{ github.event.pull_request.head.sha }}
  IMAGE: ethyca/fidesctl:${{ github.event.pull_request.head.sha }}

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build fidesctl container
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./fidesctl
          file: ./fidesctl/Dockerfile
          outputs: type=docker,dest=/tmp/${{ env.CONTAINER }}.tar
          push: false
          tags: ${{ env.IMAGE }}

      - name: Upload fidesctl container
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.CONTAINER }}
          path: /tmp/${{ env.CONTAINER }}.tar
          retention-days: 7

  Evaluate:
    needs: Build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: fidesctl
          POSTGRES_PASSWORD: fidesctl
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Download fidesctl container
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.CONTAINER }}
          path: /tmp/

      - name: Load fidesctl image
        run: docker load --input /tmp/${{ env.CONTAINER }}.tar

      - name: Check fidesctl installation
        run: docker run ${{ env.IMAGE }} fidesctl

      - name: Run fidesctl evaluation
        run: docker run --rm ${{ env.IMAGE }} fidesctl --local evaluate fides_resources/

  Format:
    needs: Build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: fidesctl
          POSTGRES_PASSWORD: fidesctl
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Download fidesctl container
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.CONTAINER }}
          path: /tmp/

      - name: Load fidesctl image
        run: docker load --input /tmp/${{ env.CONTAINER }}.tar

      - name: Run formatter
        run: docker run ${{ env.IMAGE }} black --check src/

  Lint:
    needs: Build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: fidesctl
          POSTGRES_PASSWORD: fidesctl
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Download fidesctl container
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.CONTAINER }}
          path: /tmp/

      - name: Load fidesctl image
        run: docker load --input /tmp/${{ env.CONTAINER }}.tar

      - name: Run linter
        run: docker run ${{ env.IMAGE }} pylint src/

  TypeCheck:
    needs: Build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: fidesctl
          POSTGRES_PASSWORD: fidesctl
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Download fidesctl container
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.CONTAINER }}
          path: /tmp/

      - name: Load fidesctl image
        run: docker load --input /tmp/${{ env.CONTAINER }}.tar

      - name: Run typechecker
        run: docker run ${{ env.IMAGE }} mypy

  Complexity:
    needs: Build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: fidesctl
          POSTGRES_PASSWORD: fidesctl
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Download fidesctl container
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.CONTAINER }}
          path: /tmp/

      - name: Load fidesctl image
        run: docker load --input /tmp/${{ env.CONTAINER }}.tar

      - name: Run cyclomatic complexity check
        run: docker run ${{ env.IMAGE }} xenon src --max-absolute B --max-modules B --max-average A --ignore "data, tests, docs" --exclude "src/fidesctl/core/annotate_dataset.py,src/fidesctl/_version.py"

  Test:
    needs: Build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: fidesctl
          POSTGRES_PASSWORD: fidesctl
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Download fidesctl container
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.CONTAINER }}
          path: /tmp/

      - name: Load fidesctl image
        run: docker load --input /tmp/${{ env.CONTAINER }}.tar

      - name: Start fidesctl
        run: docker run ${{ env.IMAGE }}

      - name: Run test suite
        run: docker run ${{ env.IMAGE }} pytest -x
